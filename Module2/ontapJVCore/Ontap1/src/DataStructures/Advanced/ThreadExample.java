package DataStructures.Advanced;

public class ThreadExample {
    public static void main(String[] args) {
        // T·∫°o 2 lu·ªìng: 1 cho t·∫£i file, 1 cho x·ª≠ l√Ω d·ªØ li·ªáu
        DownloadTask downloadThread = new DownloadTask(); // extends Thread
        Thread processingThread = new Thread(new DataProcessing()); // implements Runnable

        // B·∫Øt ƒë·∫ßu c·∫£ 2 lu·ªìng
        downloadThread.start();
        processingThread.start();

        // Lu·ªìng ch√≠nh hi·ªÉn th·ªã progress (kh√¥ng b·ªã ch·∫∑n b·ªüi 2 lu·ªìng kia)
        for (int i = 1; i <= 10; i++) {
            System.out.println("‚è≥ Main thread: ƒëang theo d√µi ti·∫øn tr√¨nh... " + i);
            try {
                Thread.sleep(300); // ngh·ªâ 0.3s
            } catch (InterruptedException e) {
                System.out.println("Main thread b·ªã gi√°n ƒëo·∫°n!");
            }
        }

        // Ch·ªù 2 lu·ªìng kia ho√†n th√†nh
        try {
            downloadThread.join();
            processingThread.join();
        } catch (InterruptedException e) {
            System.out.println("Join b·ªã gi√°n ƒëo·∫°n!");
        }

        System.out.println("üéâ T·∫•t c·∫£ c√¥ng vi·ªác ƒë√£ ho√†n th√†nh!");
    }
}
